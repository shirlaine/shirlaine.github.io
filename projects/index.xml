<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on shirlaine.com</title>
    <link>/projects/</link>
    <description>Recent content in Projects on shirlaine.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Mar 2018 22:30:29 +0800</lastBuildDate>
    
	<atom:link href="/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS Happy Grid</title>
      <link>/projects/happy-grid/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/happy-grid/</guid>
      <description>Build with CSS Grid, Reponsive Design included! Build this breakble toy as a reference which I spoke about at the meetup talk at Talk.CSS and JuniorDevSG
View recording of the talk titled &amp;ldquo;CSS Grid for Noobs by Noobs&amp;rdquo; here
View Original Photo inspiration here
View Codepen Demo here</description>
    </item>
    
    <item>
      <title>Facebook API Demo</title>
      <link>/projects/client/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/client/</guid>
      <description>A Reporting-Tool App Build with Ruby on Rails | Bootstrap| PostgreSql Given the opportunity to lead a team of 3, this project was our capstone project in which we worked with a local media company to automate their reporting process.
Problem The company was spending too much time on generating manual reports for their clients&amp;rsquo; campaigns statistics.
Solution To automate the process of retrieving those statistics through the use of our app, using the Facebook Graph API.</description>
    </item>
    
    <item>
      <title>Health Shop Demo</title>
      <link>/projects/e-commerce/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/e-commerce/</guid>
      <description>An E-commerce App Build with Ruby on Rails | Bootstrap | Slim | PostgreSql Build for a seller and buyers, to facilitate the purchase of health beverages.
Features
 As a User, I can add to my cart as a guest As a User, I can only checkout if i am logged in As a User, I can complete payment upon checkout (BrainTree) As an Admin, I can create, edit and delete products to be sold.</description>
    </item>
    
    <item>
      <title>TechLadies Bootcamp Application App</title>
      <link>/projects/techladies-app/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/techladies-app/</guid>
      <description> Post under construction.. Brb! </description>
    </item>
    
    <item>
      <title>Too-Doo List Demo</title>
      <link>/projects/too-doo-list/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/too-doo-list/</guid>
      <description>A To-Do-List App Build with Ruby on Rails | Bootstrap| PostgreSql Built in a team of 2, this project was foundational to showcase our knowledge on MVD, CRUD and Modal Associations. We also used the Gem, Devise, to handle basic authentication.
Features
 As a User, I can log in and log out As a User, I can create, edit and delete task lists As a User, I can create, edit and delete task under a task list As a User, I can toggle task status between completed and in progress As a User, I can indicated priority of task  Code can be found here</description>
    </item>
    
    <item>
      <title>Tweeter Tweet Demo</title>
      <link>/projects/tweeter-tweet/</link>
      <pubDate>Tue, 06 Mar 2018 22:30:29 +0800</pubDate>
      
      <guid>/projects/tweeter-tweet/</guid>
      <description>An Twitter Clone App Build with Ruby on Rails | Bootstrap | PostgreSql Built with the purpose of understand self-referential tables and to further strengthen Rails knowledge. Carriewave Gem used for uploading of profile photos, and Devise for authentication.
Features
 As a User, I can create/edit/delete own tweets As a User, I can follow and unfollow other users As a User, I can view all tweets, or can view tweets of individual users  Code can be found here</description>
    </item>
    
  </channel>
</rss>